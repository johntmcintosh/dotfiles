# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="johntmcintosh-dev"
# ZSH_THEME="wip3"
ZSH_THEME="johntmcintosh"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git brew z)

source $ZSH/oh-my-zsh.sh

# Customize to your needs...
export PATH=/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin:/usr/local/git/bin:/usr/bin

# Add fastlane to the path
export PATH="$HOME/.fastlane/bin:$PATH"

# Add user bin to path
export PATH=~/bin:$PATH

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"

# Add clubhouse bin to path
export PATH=/projects/development/clubhouse/Scripting/bin:$PATH

# Tell terminal to use colored outputs
export CLICOLOR=1;

# Custom alias for ls
alias ls='ls -Fh'

# Prevent Autocorrect
alias cap='nocorrect cap'
alias pod='nocorrect pod'

# Quicklook
alias ql='qlmanage -p "$@" >& /dev/null'

# Git Aliases
alias gst='git status'

# Reference: http://stackoverflow.com/a/18310499/407523
alias glist='for ref in $(git for-each-ref --sort=-committerdate --format="%(refname)" refs/heads/ refs/remotes ); do git log -n1 $ref --pretty=format:"%Cgreen%cr%Creset %C(yellow)%d%Creset %C(bold blue)<%an>%Creset%n" | cat ; done | awk '"'! a["'$0'"]++'"

# Get external IP address
alias ip="curl http://checkip.amazonaws.com"

# Launch sourcetree for the current directory
alias stree='/Applications/SourceTree.app/Contents/Resources/stree'

# Launch Visual Studio Code
alias vs='code'
alias vsc='code'

# View codesign output on a binary
alias codesign_verify='codesign -dv --verbose=4'

# Get docs for standard http status codes
function httpcode() {
    curl http://httpcode.info/$1;
}

# Create a new directory and cd into it in one step
function mkcdir () {
    mkdir -p -- "$1" &&
      cd -P -- "$1"
}

# Install the provided gitignore in the current directory
function gi() {
    curl https://raw.githubusercontent.com/johntmcintosh/gitignore/master/$1.gitignore -o .gitignore
}

# Launch safari to search the passed phrase 
function google() { 
    open /Applications/Safari.app/ "http://www.google.com/search?q=$1"; 
}

# Squash the last x number of git commits together. 
# Usage: `git_squash 3` => Squash the last 3 commits
function git_squash() {
    git reset --soft HEAD~$1 && git commit
}

# Forget all files that are currently tracked by git, but should be ignored
# based on the contents of the repo's gitignore.
# http://stackoverflow.com/a/19095988/407523
function git_forget() {
    git rm -r --cached . && git add .
}

# Reload the shell profile
alias reload='. ~/.zshrc'

# Open the shell configuration in text editor
alias zshconfig="vs ~/.zshrc"

# Enable autocomplete for fastlane lanes
source ~/.fastlane/completions/completion.sh

# Instantiate rbenv for ruby version management
eval "$(rbenv init -)"

# Shortcut for opening Xcode workspace from the current directory
alias xcw="open *.xcworkspace"