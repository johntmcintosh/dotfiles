# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="johntmcintosh-dev"
# ZSH_THEME="wip3"
ZSH_THEME="johntmcintosh"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git brew z)

source $ZSH/oh-my-zsh.sh

# Customize to your needs...
export PATH=/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin:/usr/local/git/bin:/usr/bin

# Add AWS to the path
# export PATH="$HOME/Library/Python/3.6/bin:$PATH"

# Add fastlane to the path (when installed via `brew cask`)
# export PATH="$HOME/.fastlane/bin:$PATH"

# Add user bin to path
export PATH=~/bin:$PATH

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"

# Tell terminal to use colored outputs
export CLICOLOR=1;

# Custom alias for ls
alias ls='ls -Fh'

# Prevent Autocorrect
alias cap='nocorrect cap'
alias pod='nocorrect pod'

# Quicklook
alias ql='qlmanage -p "$@" >& /dev/null'

# Git Aliases
alias gst='echo "> git status"; git status;'
alias gsu='echo "> git submodule update"; git submodule update;'

# Reference: http://stackoverflow.com/a/18310499/407523
alias glist='for ref in $(git for-each-ref --sort=-committerdate --format="%(refname)" refs/heads/ refs/remotes ); do git log -n1 $ref --pretty=format:"%Cgreen%cr%Creset %C(yellow)%d%Creset %C(bold blue)<%an>%Creset%n" | cat ; done | awk '"'! a["'$0'"]++'"

# Get external IP address
alias ip="curl http://checkip.amazonaws.com"

# Launch sourcetree for the current directory
alias stree='/Applications/SourceTree.app/Contents/Resources/stree'

# Launch Visual Studio Code
alias vs='code'
alias vsc='code'

# View codesign output on a binary
alias codesign_verify='codesign -dv --verbose=4'

# Get docs for standard http status codes
function httpcode() {
    curl http://httpcode.info/$1;
}

# Create a new directory and cd into it in one step
function mkcdir () {
    mkdir -p -- "$1" &&
      cd -P -- "$1"
}

# Install the provided gitignore in the current directory
function gi() {
    curl https://raw.githubusercontent.com/johntmcintosh/gitignore/master/$1.gitignore -o .gitignore
}

# Squash the last x number of git commits together. 
# Usage: `git_squash 3` => Squash the last 3 commits
function git_squash() {
    git reset --soft HEAD~$1 && git commit
}

# Forget all files that are currently tracked by git, but should be ignored
# based on the contents of the repo's gitignore.
# http://stackoverflow.com/a/19095988/407523
function git_forget() {
    git rm -r --cached . && git add .
}

# Reload the shell profile
alias reload='. ~/.zshrc'

# Open the shell configuration in text editor
alias zshconfig="vs ~/.zshrc"

# Enable autocomplete for fastlane lanes
source ~/.fastlane/completions/completion.sh

# Shortcut for opening Xcode workspace from the current directory
alias xcw="open *.xcworkspace"
alias xc="xed ."

# Clean derived data in xcode
alias xcclean="rm -rf ~/Library/Developer/Xcode/DerivedData"

# Lock the screen (when going AFK)
alias afk="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"

# ---------------------------
# Ruby
# ---------------------------

# Configure RubyGems to install into user directory
export GEM_HOME=$HOME/.gem
export GEM_PATH=$GEM_HOME
export PATH=$GEM_HOME/bin:$PATH

# ---------------------------
# Chruby
# ---------------------------

# Add chruby
source /usr/local/opt/chruby/share/chruby/chruby.sh

# Set the default ruby version for new terminal sessions
chruby ruby-2.6.5

# Use chruby to auto switch ruby versions
source /usr/local/opt/chruby/share/chruby/auto.sh

# source nvm
export NVM_DIR="$HOME/.nvm"
. "/usr/local/opt/nvm/nvm.sh"

# ruby-build installs a non-Homebrew OpenSSL for each Ruby version installed and these are never upgraded.
# Note: this may interfere with building old versions of Ruby (e.g <2.4) that use OpenSSL <1.1.
# To link Rubies to Homebrew's OpenSSL 1.1 (which is upgraded) add the following.
export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(brew --prefix openssl@1.1)"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

